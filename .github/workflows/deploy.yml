name: CI/CD to EC2
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run Tests
        run: ./gradlew test

  deploy:
    name: Build and Deploy Spring Boot App to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: '17'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build Spring Boot App
        run: ./gradlew clean build -x test

      - name: Check built JARs
        run: ls -lh build/libs/

      - name: Save EC2 SSH key
        run: |
          echo "${{ secrets.EC2_KEY }}" > key.pem
          chmod 400 key.pem

      - name: Ensure remote app directory exists
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "mkdir -p ${{ secrets.EC2_APP_DIR }}"

      - name: Deploy JAR to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem \
            build/libs/${{ secrets.APP_NAME }} \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.EC2_APP_DIR }}/${{ secrets.APP_NAME }}